"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSmeltingProductName = getSmeltingProductName;
exports.isFuel = isFuel;
// =========================================================================================
// NOTE: The following utils were generated by Claude on Apr 23, 2025 using the tablea from
// https://minecraft.fandom.com/wiki/Smelting as context
// =========================================================================================
/**
 * Gets the smelting product name for a given item name
 * @param itemName - The mineflayer-style item name (e.g., "iron_ore")
 * @returns The name of the product, or undefined if the item is not smeltable
 */
function getSmeltingProductName(itemName) {
    // Convert to lowercase for case-insensitive matching
    const item = itemName.toLowerCase();
    // Food items
    if (item === "potato")
        return "baked_potato";
    if (item === "kelp")
        return "dried_kelp";
    if (item === "raw_beef")
        return "cooked_beef";
    if (item === "raw_porkchop")
        return "cooked_porkchop";
    if (item === "raw_mutton")
        return "cooked_mutton";
    if (item === "raw_chicken")
        return "cooked_chicken";
    if (item === "raw_rabbit")
        return "cooked_rabbit";
    if (item === "raw_cod")
        return "cooked_cod";
    if (item === "raw_salmon")
        return "cooked_salmon";
    // Raw materials to ingots
    if (item === "raw_iron")
        return "iron_ingot";
    if (item === "raw_copper")
        return "copper_ingot";
    if (item === "raw_gold")
        return "gold_ingot";
    if (item === "ancient_debris")
        return "netherite_scrap";
    // Metal blocks to ingots (added)
    if (item === "iron_block")
        return "iron_ingot";
    if (item === "gold_block")
        return "gold_ingot";
    if (item === "copper_block")
        return "copper_ingot";
    // Ores to materials
    if (item.includes("redstone_ore"))
        return "redstone";
    if (item.includes("coal_ore"))
        return "coal";
    if (item.includes("emerald_ore"))
        return "emerald";
    if (item.includes("lapis_lazuli_ore") || item.includes("lapis_ore"))
        return "lapis_lazuli";
    if (item.includes("diamond_ore"))
        return "diamond";
    if (item === "nether_quartz_ore")
        return "quartz";
    if (item.includes("iron_ore"))
        return "iron_ingot";
    if (item.includes("copper_ore"))
        return "copper_ingot";
    if (item.includes("gold_ore") || item === "nether_gold_ore")
        return "gold_ingot";
    // Tools and armor to nuggets
    if ((item.includes("iron_") || item.includes("chainmail_")) &&
        (item.includes("_pickaxe") ||
            item.includes("_axe") ||
            item.includes("_shovel") ||
            item.includes("_hoe") ||
            item.includes("_sword") ||
            item.includes("_helmet") ||
            item.includes("_chestplate") ||
            item.includes("_leggings") ||
            item.includes("_boots") ||
            item === "iron_horse_armor")) {
        return "iron_nugget";
    }
    if (item.includes("golden_") &&
        (item.includes("_pickaxe") ||
            item.includes("_axe") ||
            item.includes("_shovel") ||
            item.includes("_hoe") ||
            item.includes("_sword") ||
            item.includes("_helmet") ||
            item.includes("_chestplate") ||
            item.includes("_leggings") ||
            item.includes("_boots") ||
            item === "golden_horse_armor")) {
        return "gold_nugget";
    }
    // Stone materials
    if (item === "cobblestone")
        return "stone";
    if (item === "stone")
        return "smooth_stone";
    if (item === "stone_bricks")
        return "cracked_stone_bricks";
    if (item === "cobbled_deepslate")
        return "deepslate";
    if (item === "deepslate_bricks")
        return "cracked_deepslate_bricks";
    if (item === "deepslate_tiles")
        return "cracked_deepslate_tiles";
    if (item === "sandstone")
        return "smooth_sandstone";
    if (item === "red_sandstone")
        return "smooth_red_sandstone";
    if (item === "nether_bricks")
        return "cracked_nether_bricks";
    if (item === "basalt")
        return "smooth_basalt";
    if (item === "polished_blackstone_bricks")
        return "cracked_polished_blackstone_bricks";
    if (item === "quartz_block")
        return "smooth_quartz";
    // Other materials
    if (item === "clay")
        return "terracotta";
    if (item === "sand")
        return "glass";
    if (item === "red_sand")
        return "glass";
    if (item === "wet_sponge")
        return "sponge";
    if (item === "chorus_fruit")
        return "popped_chorus_fruit";
    if (item === "sea_pickle")
        return "lime_dye";
    if (item === "cactus")
        return "green_dye";
    if (item === "clay_ball")
        return "brick";
    if (item === "netherrack")
        return "nether_brick";
    // Wood items to charcoal
    if (item.endsWith("_log") ||
        item.endsWith("_wood") ||
        item.includes("stripped_")) {
        return "charcoal";
    }
    // Colored terracotta to glazed terracotta
    const colors = [
        "white",
        "orange",
        "magenta",
        "light_blue",
        "yellow",
        "lime",
        "pink",
        "gray",
        "light_gray",
        "silver", // both light_gray and silver (for compatibility)
        "cyan",
        "purple",
        "blue",
        "brown",
        "green",
        "red",
        "black",
    ];
    for (const color of colors) {
        if (item === `${color}_terracotta`) {
            return `${color}_glazed_terracotta`;
        }
    }
    // If no match found, item is not smeltable
    return undefined;
}
/**
 * Determines if a given item can be used as fuel in a furnace
 * @param itemName - The mineflayer-style item name (e.g., "birch_planks")
 * @returns Whether the item can be used as fuel
 */
function isFuel(itemName) {
    // Convert to lowercase for case-insensitive matching
    const item = itemName.toLowerCase();
    // Special high-burn items
    if (item === "lava_bucket" ||
        item === "coal_block" ||
        item === "dried_kelp_block" ||
        item === "blaze_rod" ||
        item === "coal" ||
        item === "charcoal") {
        return true;
    }
    // Boats (any type)
    if (item.includes("_boat")) {
        return true;
    }
    // Bamboo items
    if (item === "bamboo_mosaic" ||
        item === "bamboo_mosaic_slab" ||
        item === "bamboo_mosaic_stairs" ||
        item === "block_of_bamboo" ||
        item === "block_of_stripped_bamboo" ||
        item.startsWith("bamboo_") // Catches other bamboo items like planks, stairs, signs, etc.
    ) {
        return true;
    }
    // Bee-related
    if (item === "bee_nest" || item === "beehive") {
        return true;
    }
    // Bookshelf
    if (item === "chiseled_bookshelf") {
        return true;
    }
    // Wood types
    const woodTypes = [
        "oak",
        "spruce",
        "birch",
        "jungle",
        "acacia",
        "dark_oak",
        "mangrove",
        "cherry",
    ];
    // Wood categories
    const woodCategories = [
        "_log",
        "_wood",
        "_planks",
        "_slab",
        "_stairs",
        "_sign",
        "_button",
        "_pressure_plate",
        "_trapdoor",
        "_door",
        "_fence_gate",
        "_fence",
    ];
    // Check if the item contains both a wood type and a wood category
    for (const type of woodTypes) {
        if (item.includes(type)) {
            for (const category of woodCategories) {
                if (item.includes(category)) {
                    return true;
                }
            }
            // Check for stripped logs/wood
            if (item.includes("stripped_" + type)) {
                return true;
            }
        }
    }
    // Non-wood items that are still wooden
    if (item === "crafting_table" ||
        item === "chest" ||
        item === "trapped_chest" ||
        item === "daylight_detector" ||
        item === "jukebox" ||
        item === "note_block" ||
        item === "bookshelf" ||
        item === "lectern" ||
        item === "composter" ||
        item === "barrel" ||
        item === "bowl" ||
        item === "wooden_axe" ||
        item === "wooden_hoe" ||
        item === "wooden_pickaxe" ||
        item === "wooden_shovel" ||
        item === "wooden_sword" ||
        item === "fishing_rod" ||
        item === "carrot_on_a_stick" ||
        item === "warped_fungus_on_a_stick" ||
        item === "stick" ||
        item === "ladder" ||
        item.endsWith("_banner")) {
        return true;
    }
    // Wool and carpet
    const colors = [
        "white",
        "orange",
        "magenta",
        "light_blue",
        "yellow",
        "lime",
        "pink",
        "gray",
        "light_gray",
        "cyan",
        "purple",
        "blue",
        "brown",
        "green",
        "red",
        "black",
    ];
    for (const color of colors) {
        if (item === `${color}_wool` || item === `${color}_carpet`) {
            return true;
        }
    }
    // Handle uncolored wool and carpet
    if (item === "wool" || item === "carpet") {
        return true;
    }
    // If none of the above conditions match, it's not a fuel
    return false;
}
